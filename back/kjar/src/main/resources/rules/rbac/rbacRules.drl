package rules.test;

import rs.sbnz.model.Request;
import rs.sbnz.model.Permission;
import rs.sbnz.model.Role;
import rs.sbnz.model.User;
import rs.sbnz.model.RbacRequest;

query roleHasPermission(int roleId, int permissionId)
    Role(id == roleId, $permissions: permissions, $parent: parent)
    (
        Permission(id == permissionId ) from $permissions
    )
    or 
    (
        Role($parentId: id, this == $parent)
        and roleHasPermission($parentId, permissionId;)
    )
end

rule "Pre-authorize against role"
    no-loop
    salience 1
    when
        $req: RbacRequest($user: user, $permission: permission)
        (
            (
                eval($user.getRbacRole() == null)
            )
            or
            (
                not roleHasPermission($user.rbacRole.id, $permission.id; )
            )
        )
    then
        System.out.printf("Unauthorized user %d for permission %d\n", $user.getId(), $permission.getId());
        modify($req) {
            setRejected(true);
        }
end